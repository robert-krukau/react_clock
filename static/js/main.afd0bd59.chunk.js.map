{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","date","Date","toLocaleTimeString","this","setInterval","setState","prevProps","props","console","log","name","clearInterval","React","Component","App","isClockVisible","clockName","getSomeName","Math","floor","random","toggleClock","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,QAA+B,KADjC,EAGEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAJrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,QAAUM,aAAY,WACzB,EAAKC,SAAS,CAAEL,MAAM,IAAIC,MAAOC,yBAChC,OAVP,gCAaE,SAAmBI,GACbA,IAAcH,KAAKI,OAErBC,QAAQC,IAAR,qCAA0CH,EAAUI,KAApD,eAA+DP,KAAKI,MAAMG,SAhBhF,kCAoBE,WACMP,KAAKL,SACPa,cAAcR,KAAKL,WAtBzB,oBA0BE,WACE,IAAQE,EAASG,KAAKJ,MAAdC,KAER,OACE,mCACGA,QA/BT,GAA2BY,IAAMC,WCDpBC,G,MAAb,4MACEf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,YAAc,WACZ,EAAKZ,SAAS,CACZW,UAAWE,KAAKC,MAAsB,IAAhBD,KAAKE,aARjC,EAYEC,YAAc,WACZ,EAAKhB,UAAS,kBAAyB,CAAEU,gBAA3B,EAAGA,oBAbrB,4CAgBE,WAAU,IAAD,OACCA,EAAmBZ,KAAKJ,MAAxBgB,eAER,OACE,gCACE,mDAAoBZ,KAAKJ,MAAMiB,aAE9BD,GACC,cAAC,EAAD,CAAOL,KAAMP,KAAKJ,MAAMiB,YAE1B,uBAEA,wBACEM,KAAK,SACLC,QAASpB,KAAKkB,YAFhB,SAIGN,EAAiB,aAAe,eAEnC,uBAEA,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKN,eAHT,oCApCR,GAAyBL,IAAMC,YCN/BW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.afd0bd59.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number\n};\n\ntype State = {\n  date: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId: NodeJS.Timer | null = null;\n\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        {date}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  getSomeName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100),\n    });\n  };\n\n  toggleClock = () => {\n    this.setState(({ isClockVisible }) => ({ isClockVisible: !isClockVisible }));\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div>\n        <h1>{`React clock ${this.state.clockName}`}</h1>\n\n        {isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n        <br />\n\n        <button\n          type=\"button\"\n          onClick={this.toggleClock}\n        >\n          {isClockVisible ? 'Hide clock' : 'Show clock'}\n        </button>\n        <br />\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.getSomeName();\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}